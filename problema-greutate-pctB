#include <iostream>
#include <algorithm>
#include "Header.h"

using namespace std;

void citire(int& n, int& greutate)
{
	cin >> n >> greutate;
}

void citireObiecteMultiple(int n, Obiect vectorObiecte[])
{
	for (int i = 0; i < n; i++)
	{
		vectorObiecte[i].Citire();
	}
}

void ordonareDupaBeneficiu(int n, Obiect vectorObiecte[])
{
	sort(vectorObiecte, vectorObiecte + n);
}

void aflareObiecte(int n, int greutate, Obiect vectorObiecte[])
{
	for (int i = 0; i < n; i++)
	{
		if (vectorObiecte[i]._greutate <= greutate)
		{
			cout << vectorObiecte[i]._greutate << " " << vectorObiecte[i]._beneficiu << endl;
			greutate -= vectorObiecte[i]._greutate;
		}
		if (vectorObiecte[i]._greutate > greutate)
		{
			int greutateDepasita = vectorObiecte[i]._greutate - greutate;
			cout << vectorObiecte[i]._greutate - greutateDepasita << " ";
			greutateDepasita = (vectorObiecte[i]._greutate - greutateDepasita) * 100 / vectorObiecte[i]._greutate; //procentajul din ultimul obiect pe care-l folosim
			cout << (vectorObiecte[i]._beneficiu * greutateDepasita) / 100 << endl;
		}
		if (greutate == 0)
		{
			break;
		}
	}
}

int main()
{
	int n, greutate;
	Obiect vectorObiecte[100];
	citire(n, greutate); citireObiecteMultiple(n, vectorObiecte); ordonareDupaBeneficiu(n, vectorObiecte);
	aflareObiecte(n, greutate, vectorObiecte);
}
